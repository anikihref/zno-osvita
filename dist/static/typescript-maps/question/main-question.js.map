{"version":3,"sources":["../../src/typescript/question/main-question.ts"],"names":[],"mappings":"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","file":"../../scripts/question/main-question.js","sourcesContent":["import { addClass } from \"../functions/attributes.js\";\r\nimport { createHtmlBlock } from \"../functions/createElements.js\";\r\nimport { appendElements } from \"../functions/elementActions.js\";\r\nimport { test } from \"../pages/test.js\";\r\n\r\nclass Question {\r\n    constructor(public question: QuestionInfo) {}\r\n\r\n    render(): void {\r\n        const formObj = test.questionActions.getQuestionObj(this.question);\r\n        const questionProgress: number =\r\n            ((test.info.currentInfo.id + 1) / test.allQuestionsList.length) *\r\n            100;\r\n\r\n        // move progress bar forward or backward \r\n        test.elements.$progressBar!.style.width = `${questionProgress}%`\r\n        test.elements.$questionWrapper!.innerHTML = \"\";\r\n        appendElements(\r\n            test.elements.$questionWrapper!,\r\n            this.createQuestionNumber(this.question.id + 1),\r\n            this.createQuestionWrapper()\r\n        );\r\n\r\n        if (test.info.isFinished) {\r\n            appendElements(\r\n                test.elements.$questionWrapper!,\r\n                this.createAnswerWrapper()\r\n            );\r\n        } else {\r\n            appendElements(\r\n                test.elements.$questionWrapper!,\r\n                formObj.createAnswerForm()\r\n            );\r\n            // вставляем ответ\r\n            formObj.insertAnswer();\r\n        }\r\n\r\n        // перемещаем активную ссылку на вопрос\r\n        test.questionActions.moveActiveLink(this.question.id);\r\n    }\r\n\r\n    createQuestionWrapper(): HTMLElement {\r\n        const formObj = test.questionActions.getQuestionObj(this.question);\r\n        const $questionWrapper = createHtmlBlock(\"div\");\r\n        addClass($questionWrapper, \"question__text-wrapper\");\r\n\r\n        if (this.question.text) {\r\n            appendElements($questionWrapper, this.createQuestionText());\r\n        }\r\n\r\n        if (this.question.questionImage) {\r\n            appendElements($questionWrapper, this.createQuestionImageBlock());\r\n        }\r\n\r\n        appendElements($questionWrapper, formObj.createQuestions());\r\n\r\n        return $questionWrapper;\r\n    }\r\n\r\n    // создаёт текста вопроса\r\n    createQuestionText(): HTMLElement {\r\n        const $questionTextWrapper = createHtmlBlock(\r\n            \"div\",\r\n            `<p>${this.question.text}</p>`\r\n        );\r\n        addClass($questionTextWrapper, \"question__text\");\r\n\r\n        return $questionTextWrapper;\r\n    }\r\n\r\n    // создаёт блок с картинкой для вопроса\r\n    createQuestionImageBlock(): HTMLElement {\r\n        const $imageWrapper = createHtmlBlock(\r\n            \"div\",\r\n            `<img src=\"${this.question.questionImage}\">`\r\n        );\r\n        addClass($imageWrapper, \"question__wrapper-image\");\r\n\r\n        return $imageWrapper;\r\n    }\r\n\r\n    createQuestionNumber(questionNum: number): HTMLElement {\r\n        const $questionNumber = createHtmlBlock(\r\n            \"div\",\r\n            `Завдання ${questionNum} з ${test.allQuestionsList.length}`\r\n        );\r\n\r\n        addClass($questionNumber, \"question__num_all\");\r\n        return $questionNumber;\r\n    }\r\n\r\n    // создаёт блок с ответами правильными ответами и ответами пользователя\r\n    createAnswerWrapper(): HTMLElement {\r\n        const $qestionAnswerWrapper = createHtmlBlock(\r\n            \"div\",\r\n            // создаём элемент с правильными ответами\r\n            this.createExpectedAnswerBlock(),\r\n            // создаём элемент с ответами пользователя если ответы есть\r\n            this.createAnswerBlock()\r\n        );\r\n\r\n        addClass($qestionAnswerWrapper, \"question__answer-wrapper\");\r\n\r\n        return $qestionAnswerWrapper;\r\n    }\r\n\r\n    // создаёт блок с ответами пользователя (если ответы были)\r\n    createAnswerBlock(): HTMLElement {\r\n        if (!this.question.answer) {\r\n            return createHtmlBlock(\"div\");\r\n        }\r\n\r\n        let answerHtml = \"\";\r\n        this.question.answer.forEach((answer, i) => {\r\n            answerHtml += `<p>${++i}. ${answer ?? \"нет ответа\"}</p> `;\r\n        });\r\n\r\n        const $answerBlockTitle = createHtmlBlock(\"h3\", \"Ваш ответ:\");\r\n        const $answerBlock = createHtmlBlock(\"div\", answerHtml);\r\n\r\n        addClass($answerBlockTitle, \"question__answer-title\");\r\n        addClass($answerBlock, \"question__answer\");\r\n\r\n        $answerBlock.prepend($answerBlockTitle);\r\n        return $answerBlock;\r\n    }\r\n\r\n    // создаёт блок с правильными ответами\r\n    createExpectedAnswerBlock(): HTMLElement {\r\n        let answerHtml = \"\";\r\n\r\n        this.question.expectedAnswer.forEach((answer, i) => {\r\n            answerHtml += `<p>${++i}. ${answer}</p> `;\r\n        });\r\n\r\n        const $answerBlockTitle = createHtmlBlock(\"h3\", \"Ответ:\");\r\n        const $answerBlock = createHtmlBlock(\"div\", answerHtml);\r\n\r\n        $answerBlockTitle.classList.add(\"question__answer-title\");\r\n        $answerBlock.classList.add(\"question__answer\");\r\n\r\n        $answerBlock.prepend($answerBlockTitle);\r\n        return $answerBlock;\r\n    }\r\n}\r\n\r\nexport default Question;\r\n"]}