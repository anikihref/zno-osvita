{"version":3,"sources":["../../src/typescript/functions/createElements.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAA;AAElD,MAAM,UAAU,eAAe,CAAC,MAAc,EAAE,GAAG,OAA4C;IAC7F,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAEhD,IAAI,CAAC,OAAO,EAAE;QAAE,OAAO,QAAQ,CAAA;KAAE;IAGjC,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;QAE1B,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACxD,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC;SAC5B;aAEI;YACH,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAChC;KACF;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","file":"../../scripts/functions/createElements.js","sourcesContent":["import {appendElements} from \"./elementActions.js\"\r\n\r\nexport function createHtmlBlock(parent: string, ...content: string[] | HTMLElement[] | number[]) {\r\n  const $element = document.createElement(parent);\r\n\r\n  if (!content) { return $element }\r\n\r\n  //вставляем контент\r\n  for (const elem of content) {\r\n    // вставляем в созданный элемент контент если передан текст\r\n    if (typeof elem === \"string\" || typeof elem === \"number\") {\r\n      $element.innerHTML += elem;\r\n    }\r\n    // всавляем в созданный элемент контент если передан html элемент\r\n    else {\r\n      appendElements($element, elem);\r\n    }\r\n  }\r\n\r\n  return $element;\r\n}\r\n"]}