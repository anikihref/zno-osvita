{"version":3,"sources":["../../src/typescript/modal/register-modal.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,iBAAiB,CAAC;AAExC,MAAM,aAAc,SAAQ,SAAS;IACjC,YACW,SAAiB,EAChB,aAAqB,cAAc,EACjC,SAAS,EAAuB;QAE1C,KAAK,CAAC,SAAS,CAAC,CAAC;QAJV,cAAS,GAAT,SAAS,CAAQ;QAChB,eAAU,GAAV,UAAU,CAAyB;QACjC,WAAM,GAAN,MAAM,CAA0B;QAI1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,KAAK,CAAC,IAAY,EAAE,WAAoB;QAC3C,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAG7B;YACE,IAAI,CAAC,MAAM,CAAC,MAAM;YAClB,IAAI,CAAC,MAAM,CAAC,MAAM;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM;SACxB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;YACb,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM;QAET,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAAA,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAEzC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CACjC,OAAO,EACP,IAAI,CAAC,mBAAmB,CAC3B,CAAC;QAGF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5D,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAEO,aAAa;QAEjB,MAAM,QAAQ,GAAgB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE5D,QAAQ,CAAC,MAAM,CACX,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,SAAS,CAAC,eAAe,CACjC,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAG5D;YACI,IAAI,CAAC,MAAM,CAAC,MAAM;YAClB,IAAI,CAAC,MAAM,CAAC,MAAM;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM;SACxB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;YACb,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IACpB,CAAC;CACJ;AAED,eAAe,aAAa,CAAA","file":"../../scripts/modal/register-modal.js","sourcesContent":["import AuthModal from \"./auth-modal.js\";\r\n\r\nclass RegisterModal extends AuthModal {\r\n    constructor(\r\n        public modalName: string,\r\n        private modalTitle: string = \"Registration\",\r\n        protected $email = {} as AuthFieldElements\r\n    ) {\r\n        super(modalName);\r\n\r\n        this.$email = super.createField(\"email\", \"email\", true);\r\n    }\r\n\r\n    public close(time: number, deleteModal: boolean): void {\r\n        super.close(time, deleteModal);\r\n        \r\n          // remove listeners\r\n          [\r\n            this.$email.$field,\r\n            this.$login.$field,\r\n            this.$password.$field\r\n        ].forEach((el) => {\r\n            el?.removeEventListener(\"blur\", this.checkValidListener);\r\n        });\r\n    }\r\n\r\n    public render(): ModalElements {\r\n        // change modal content\r\n        this.modalConfig.content = this.$form;;\r\n        this.modalConfig.title = this.modalTitle;\r\n        // set listener to watch password text\r\n        this.$seePasswordBtn.addEventListener(\r\n            \"click\",\r\n            this.seePasswordListener\r\n        );\r\n\r\n        // append content and buttons into block\r\n        this.$form.append(this.createContent(), this.$buttonsBlock);\r\n        return super.render();\r\n    }\r\n\r\n    private createContent(): HTMLElement {\r\n        // create modal & insert content\r\n        const $content: HTMLElement = document.createElement(\"div\");\r\n        \r\n        $content.append(\r\n            this.$login.$fieldContainer,\r\n            this.$email.$fieldContainer,\r\n            this.$password.$fieldContainer\r\n        );\r\n        // append button to see password into the password container\r\n        this.$password.$fieldContainer.append(this.$seePasswordBtn);\r\n\r\n        // set listeners\r\n        [\r\n            this.$email.$field,\r\n            this.$login.$field,\r\n            this.$password.$field,\r\n        ].forEach((el) => {\r\n            el?.addEventListener(\"blur\", this.checkValidListener);\r\n        });\r\n\r\n        return $content;\r\n    }\r\n}\r\n\r\nexport default RegisterModal "]}