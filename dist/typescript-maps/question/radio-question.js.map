{"version":3,"sources":["../../src/typescript/question/radio-question.ts"],"names":[],"mappings":"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","file":"../../scripts/question/radio-question.js","sourcesContent":["import { addClass } from \"../functions/attributes.js\";\r\nimport { createHtmlBlock } from \"../functions/createElements.js\";\r\nimport { appendElements } from \"../functions/elementActions.js\";\r\nimport Question from \"./main-question.js\"\r\n\r\n\r\nclass RadioQuestion extends Question {\r\n    constructor(\r\n        public question: QuestionInfo,\r\n        private letters: string[] = [\"А\", \"Б\", \"В\", \"Г\", \"Д\", \"Є\"]\r\n    ) {\r\n        super(question);\r\n    }\r\n\r\n    // если ранее ответ был дан то вставляем этот ответ\r\n    insertAnswer(): void {\r\n        if (!this.question.answer) {\r\n            return;\r\n        }\r\n\r\n        const answers = this.question.answer;\r\n\r\n        answers.forEach((answer, i) => {\r\n            if (!answer) {\r\n                return;\r\n            }\r\n\r\n            const $parent = document.querySelector(`.radio__form-row${i + 1}`)!;\r\n\r\n            const inputs = [\r\n                ...$parent.querySelectorAll(\"input.radio__input\"),\r\n            ] as HTMLInputElement[];\r\n\r\n            const id = this.question.variants!.findIndex(\r\n                (variant) => variant === answer\r\n            );\r\n\r\n            inputs[id].checked = true;\r\n        });\r\n    }\r\n\r\n    // получает ответ пользователя\r\n    getAnswer(): string[] {\r\n        const checkedInputs: HTMLInputElement[] = [];\r\n        const answers: string[] = [];\r\n        const inputs = {};\r\n        let questionsNum: number;\r\n\r\n        if (this.question.questions) {\r\n            questionsNum = this.question.questions.length;\r\n        } else {\r\n            questionsNum = 1;\r\n        }\r\n\r\n        for (let i = 0; i < questionsNum; i++) {\r\n            const $parent = document.querySelector(`.radio__form-row${i + 1}`)!;\r\n\r\n            const currentInputs = [\r\n                ...$parent.querySelectorAll(`input.radio__input`),\r\n            ] as HTMLInputElement[]; // из коллекции делаем массив инпутов\r\n            inputs[`row${i + 1}`] = currentInputs;\r\n            checkedInputs.push(\r\n                currentInputs.find((el) => el.checked) as HTMLInputElement\r\n            );\r\n        }\r\n\r\n        checkedInputs.forEach((input, i) => {\r\n            // если ответа нет то ответ ''\r\n            if (!input) {\r\n                return answers.push(\"\");\r\n            }\r\n\r\n            // получаем из ряда инпутов index выдбраного инпута\r\n            const id = inputs[`row${i + 1}`].indexOf(input);\r\n            // получаем ответ по индексу из массива ответов\r\n            const result = this.question.variants![id];\r\n\r\n            answers.push(result);\r\n        });\r\n\r\n        return answers;\r\n    }\r\n\r\n    createAnswerForm(): HTMLElement {\r\n        let resultingHtml: string = ``;\r\n        let questionsNum: number;\r\n\r\n        if (this.question.questions) {\r\n            questionsNum = this.question.questions.length;\r\n        } else {\r\n            questionsNum = 1;\r\n        }\r\n\r\n        for (let i = 0; i < questionsNum; i++) {\r\n            resultingHtml += `\r\n\t\t\t\t\t\t<div class=\"radio__form-row radio__form-row${i + 1}\">\r\n\t\t\t\t\t\t\t<div class=\"radio__form-num\">${i + 1}</div>\r\n\t\t\t\t\t`;\r\n\r\n            this.question.variants!.forEach((variant, j) => {\r\n                resultingHtml += `\r\n\t\t\t\t\t\t<label class=\"radio__button-label\">\r\n\t\t\t\t\t\t`;\r\n                if (i === 0) {\r\n                    resultingHtml += `<div class=\"radio__form-letter\">${this.letters[j]}</div>`;\r\n                }\r\n                resultingHtml += `\r\n\t\t\t\t\t\t\t<input class=\"radio__input\" type=\"radio\" name=\"answer${i}\" id=\"answer${j}\" data-id=\"${\r\n                    j + 1\r\n                }\">\r\n\t\t\t\t\t\t\t<div class=\"radio__button\"></div>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t`;\r\n            });\r\n\r\n            resultingHtml += `</div>`;\r\n        }\r\n\r\n        const $form = createHtmlBlock(\"div\", resultingHtml);\r\n        addClass($form, \"question__multipleRadio\");\r\n        return $form;\r\n    }\r\n\r\n    createQuestions(): HTMLElement {\r\n        const $questions = createHtmlBlock(\r\n            \"div\",\r\n            this.createQuestion(),\r\n            this.createFormVariants()\r\n        );\r\n        addClass($questions, \"question__radio-questions\");\r\n\r\n        return $questions;\r\n    }\r\n\r\n    // создаёт блок с вопросами ответов\r\n    private createQuestion(): HTMLElement {\r\n        if (!this.question.questions) {\r\n            this.question.questions = [];\r\n            this.question.questions.push(this.question.text!);\r\n        }\r\n\r\n        const $questionHint = createHtmlBlock(\"div\", \"Початок речення:\");\r\n        const $questionBlocks = createHtmlBlock(\"div\", $questionHint);\r\n\r\n        addClass($questionBlocks, \"radio__questions-block\");\r\n        addClass($questionHint, \"hint\");\r\n\r\n        this.question.questions.forEach((question, i) => {\r\n            const $questionRow = createHtmlBlock(\"div\");\r\n            const $radioQuestionNum = createHtmlBlock(\"div\", i + 1);\r\n            const $radioQuestionText = createHtmlBlock(\"div\", question);\r\n\r\n            addClass($radioQuestionNum, \"radio__question-num\");\r\n            addClass($radioQuestionText, \"radio__question-text\");\r\n            addClass($questionRow, \"radio__question\");\r\n\r\n            appendElements($questionRow, $radioQuestionNum, $radioQuestionText);\r\n            appendElements($questionBlocks, $questionRow);\r\n        });\r\n\r\n        return this.question.questions[0] === this.question.text ? createHtmlBlock('div') : $questionBlocks;\r\n    }\r\n\r\n    // создаёт блок с вариантами ответов\r\n    private createFormVariants(): HTMLElement {\r\n        const $questionBlocksText = createHtmlBlock(\r\n            \"div\",\r\n            \"Закінчення речення:\"\r\n        );\r\n        const $variantBlocks = createHtmlBlock(\"div\", $questionBlocksText);\r\n\r\n        addClass($variantBlocks, \"radio__variants-block\");\r\n        addClass($questionBlocksText, \"hint\");\r\n\r\n        this.question.variants!.forEach((variant, i) => {\r\n            const $questionRow = createHtmlBlock(\r\n                \"div\",\r\n                `\r\n\t\t\t\t\t<div class=\"radio__variant-letter\">${this.letters[i]}</div>\r\n\t\t\t\t\t<div class=\"radio__variant-text\">${variant}</div>\r\n\t\t\t\t`\r\n            );\r\n\r\n            appendElements($variantBlocks, $questionRow);\r\n            addClass($questionRow, \"radio__variant\");\r\n        });\r\n\r\n        return $variantBlocks;\r\n    }\r\n}\r\n\r\nexport default RadioQuestion"]}