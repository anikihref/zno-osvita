{"version":3,"sources":["../../src/typescript/question/test.ts"],"names":[],"mappings":"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","file":"../../scripts/question/test.js","sourcesContent":["import { addClass, removeClass } from \"../functions/attributes.js\";\r\nimport { createHtmlBlock } from \"../functions/createElements.js\";\r\nimport { appendElements, hideElement, prependElements, showElement } from \"../functions/elementActions.js\";\r\nimport * as listeners from \"./listeners-question.js\"\r\nimport * as createTestElements from \"./create_func-question.js\"\r\nimport RadioQuestion from \"./radio-question.js\";\r\nimport WriteQuestion from \"./write-question.js\";\r\nimport SuccessModal from \"../modal/success-modal.js\";\r\n\r\n\r\n\r\n\r\ntype TestInfo = {\r\n    currentInfo: QuestionInfo;\r\n    questionSwitchLogic: 'single' | 'seeAll';\r\n    isFinished: boolean;\r\n    question: RadioQuestion | WriteQuestion;\r\n    startTime: number,\r\n    testMinutes: number,\r\n    [key: string]: any;\r\n}\r\n\r\n\r\n\r\nconst pathName = document.location.pathname.split(\"/\");\r\nconst testPath = {\r\n    subject: pathName[1],\r\n    year: pathName[2].split(\"_\")[0],\r\n    test: pathName[2].split(\"_\")[1],\r\n};\r\n\r\nclass Test {\r\n    constructor(\r\n        public info = {} as TestInfo,\r\n        public elements: Record<string, HTMLElement | null> = {\r\n            $questionLinksBlock: createHtmlBlock('div'),\r\n            $resultingBlock: createHtmlBlock('div'),\r\n            $questionWrapper: createHtmlBlock('div'),\r\n            $btn: document.querySelector('#submitBtn'),\r\n            $nextBtn: document.querySelector('#nextBtn'),\r\n            $endBtn: document.querySelector('.form__end-btn'),\r\n            $seeAllQuestionsBtn: document.querySelector('.question__seeall-btn'),\r\n            $btnBlock: document.querySelector('.form__btn-block'),\r\n            $answerForm: document.querySelector('#answer-form'),\r\n            $questionControls: document.querySelector('.question__controls'),\r\n            $questionForm: document.querySelector('.question__form'),\r\n            $progressBar: createHtmlBlock('div')\r\n        },\r\n        public allQuestionsList: QuestionInfo[] = [],\r\n        public result = {} as { dpaPercentage: number },\r\n        public finishTimeout = setTimeout(() => {\r\n            this.finishTest()\r\n        }, 1000 * 60 * 60 * 3)\r\n    ) {}\r\n\r\n    public questionActions = {\r\n        getQuestionObj(obj: QuestionInfo): RadioQuestion | WriteQuestion {\r\n            \r\n            const type = obj.type;\r\n            switch (type) {\r\n                case \"radio\": {\r\n                    return new RadioQuestion(obj);\r\n                }\r\n    \r\n                case \"write\": {\r\n                    return new WriteQuestion(obj);\r\n                }\r\n            }\r\n        },\r\n    \r\n        moveActiveLink: (questionId: number) => {\r\n            // элемент ссылки на вопрос который станет активным\r\n            const $nextActiveBlock: HTMLElement =\r\n                this.elements.$questionLinksBlock?.querySelector(\r\n                    `[data-id=\"${questionId}\"]`\r\n                )!;\r\n            // текущий активный элемент ссылки на вопрос\r\n            const $activeBlock: HTMLElement =\r\n                this.elements.$questionLinksBlock?.querySelector(\r\n                    \".question__link_active\"\r\n                )!;\r\n    \r\n            if ($nextActiveBlock.dataset.id === $activeBlock.dataset.id) {\r\n                return;\r\n            }\r\n    \r\n            addClass($nextActiveBlock, \"question__link_active\");\r\n            removeClass($activeBlock, \"question__link_active\");\r\n        },\r\n\r\n        findNextQuestion: (question: QuestionInfo): QuestionInfo => {\r\n            // если мы на последнем вопросе то переходим на первый\r\n            if (this.allQuestionsList.length - 1 == question.id) {\r\n                return this.allQuestionsList[0];\r\n            } else {\r\n                return this.allQuestionsList[question.id + 1];\r\n            }\r\n        },\r\n\r\n        seeAllQuestions: () => {\r\n            (this.elements.$answerForm!).innerHTML = \"\";\r\n\r\n            this.allQuestionsList.forEach((question) => {\r\n                const formObj =\r\n                    this.questionActions.getQuestionObj(question);\r\n                // создаём html вопроса\r\n                const $question = createHtmlBlock(\r\n                    \"div\",\r\n                    formObj.createQuestionWrapper(),\r\n                    formObj.createAnswerWrapper()\r\n                );\r\n                // вставляем div с номером вопроса в блок вопроса\r\n                prependElements(\r\n                    $question,\r\n                    formObj.createQuestionNumber(question.id + 1)\r\n                );\r\n                // добавляем классы блоку вопроса\r\n                addClass(\r\n                    $question,\r\n                    \"question__wrapper\",\r\n                    \"question__wrapper_all\",\r\n                    `question__wrapper${question.id}`\r\n                );\r\n                // добавляем блок вопроса в блок со всеми вопросами\r\n                appendElements(this.elements.$answerForm!, $question);\r\n\r\n                // добавляем класс для блока с ответом\r\n                addClass(\r\n                    $question.querySelector(\".question__answer-wrapper\")!,\r\n                    \"question__answer-wrapper_all\"\r\n                );\r\n            });\r\n        },\r\n    }\r\n    \r\n    async getQuestions(): Promise<void> {\r\n        const appContext = this;\r\n        const res = await fetch(\r\n            `/getQuestions?subject=${testPath.subject}&year=${testPath.year}&test=${testPath.test}`\r\n        );\r\n\r\n        this.allQuestionsList = await res.json();\r\n\r\n        // добавляем поле id с его index'ом каждому вопросу\r\n        this.allQuestionsList.forEach((question, index) => {\r\n            question.id = index;\r\n        });\r\n\r\n        this.info = {\r\n            currentInfo: this.allQuestionsList[0],\r\n            isFinished: false,\r\n            isLastUnanswered: false,\r\n            unsweredQuestionsNum: this.allQuestionsList.length,\r\n            questionSwitchLogic: \"single\",\r\n            startTime: Date.now(),\r\n            testMinutes: 0,\r\n            question: this.questionActions.getQuestionObj(this.allQuestionsList[0]),\r\n            checkAnswersNumber() {\r\n                // проверяем количество вопросов без ответа\r\n                const unanseredNum = appContext.allQuestionsList.filter(\r\n                    (obj) => {\r\n                        return !obj.answer;\r\n                    }\r\n                ).length;\r\n                // записываем это количество в переменную\r\n                this.unsweredQuestionsNum = unanseredNum;\r\n\r\n                if (unanseredNum == 1) {\r\n                    this.isLastUnanswered = true;\r\n                }\r\n            },\r\n            \r\n        }\r\n    }\r\n\r\n    finishTest() {\r\n        clearTimeout(this.finishTimeout)\r\n        \r\n        fetch(\"/result\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(this.allQuestionsList),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                // записываем результат\r\n                this.result = data;\r\n\r\n                //! переопределяем значение\r\n                this.info.isFinished = true;\r\n\r\n                // создаём блок с результатом\r\n                createTestElements.createResultBlock();\r\n                // удаляем содержимое ссылок на вопросы\r\n                this.elements.$questionLinksBlock!.innerHTML = \"\";\r\n                // создаём ссылки на вопросы\r\n                createTestElements.createQuestionLinks();\r\n\r\n                // определяем врема потраченое на тест\r\n                this.info.testMinutes = Math.trunc(\r\n                    (Date.now() - this.info.startTime) / 1000 / 60\r\n                );\r\n\r\n                showElement(this.elements.$seeAllQuestionsBtn!);\r\n                // удаляем кнопки 'ответить' и 'завершить'\r\n                [this.elements.$btn!, this.elements.$endBtn!].forEach((el) =>\r\n                    el.remove()\r\n                );\r\n\r\n                this.info.question.render();\r\n\r\n                // для проверяем правильный ответ или нет и в зависимости от этого добавляе класс\r\n                (\r\n                    [\r\n                        ...document.querySelectorAll(\".question__link\"),\r\n                    ] as HTMLElement[]\r\n                ).forEach((element, i) => {\r\n                    const question = data.allQuestions[i];\r\n\r\n                    if (!question.answer) {\r\n                        return;\r\n                    } else if (\r\n                        question.result === \"mistake\" ||\r\n                        !question.result\r\n                    ) {\r\n                        addClass(element, \"question__link_mistake\");\r\n                    } else if (question.result === \"partiallySucces\") {\r\n                        addClass(element, \"question__link_partially\");\r\n                    } else if (question.result === \"succes\") {\r\n                        addClass(element, \"question__link_succes\");\r\n                    }\r\n                });\r\n\r\n                appendElements(\r\n                    this.elements.$questionControls!,\r\n                    this.elements.$resultingBlock!\r\n                );\r\n            });\r\n\r\n        const modal = new SuccessModal('finishModal', {\r\n            title: 'Ви завершили тест',\r\n            content: 'Тест завершився. Перегляньте результат.',\r\n            closable: false\r\n        })\r\n        modal.initialize(modal)\r\n        modal.open()\r\n        modal.close(3000, true)\r\n    }\r\n\r\n    run() {\r\n        this.getQuestions().then(() => {\r\n            // создаём ссылки на вопросы\r\n            console.log(1)\r\n            createTestElements.createQuestionLinks();\r\n\r\n            // добавляем слушатели для переключениям на вопросы\r\n            this.setListeners();\r\n\r\n            addClass(this.elements.$questionWrapper!, \"question__wrapper\");\r\n            appendElements(this.elements.$answerForm!, this.elements.$questionWrapper!);\r\n            // вставляем первый вопрос\r\n            this.info.question.render();\r\n\r\n            // прячем кнопку смотреть все вопросы\r\n            hideElement(this.elements.$seeAllQuestionsBtn!); // прячем кнопку смотреть все\r\n        });\r\n\r\n        const modal = new SuccessModal('startModal', {\r\n            title: 'Вітаю!',\r\n            content: 'Тест завершиться через 180 хв. Щасти!',\r\n            closable: false\r\n        })\r\n        modal.initialize(modal)\r\n        modal.open()\r\n        modal.close(3000, true)\r\n    }\r\n\r\n\r\n    setListeners(): void {\r\n        this.elements.$questionLinksBlock?.addEventListener(\r\n            \"click\",\r\n            listeners.questionLinksListener\r\n        );\r\n\r\n        this.elements.$btnBlock!.addEventListener(\r\n            \"click\",\r\n            listeners.buttonsListener\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Test"]}